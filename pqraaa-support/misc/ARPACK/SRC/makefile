CXXFLAGS =    
LDFLAGS =  
LIBS = 

CGETV0_DEPS = 

cgetv0.o : cgetv0.f $(CGETV0_DEPS)
	@gfortran -c -Wall  -O3 -funroll-loops $(CXXFLAGS) -o cgetv0.o cgetv0.f

cgetv0_d.o : cgetv0.f $(CGETV0_DEPS)
	@gfortran -c -Wall  -g $(CXXFLAGS) -o cgetv0_d.o cgetv0.f



CNAITR_DEPS = 

cnaitr.o : cnaitr.f $(CNAITR_DEPS)
	@gfortran -c -Wall  -O3 -funroll-loops $(CXXFLAGS) -o cnaitr.o cnaitr.f

cnaitr_d.o : cnaitr.f $(CNAITR_DEPS)
	@gfortran -c -Wall  -g $(CXXFLAGS) -o cnaitr_d.o cnaitr.f



CNAPPS_DEPS = 

cnapps.o : cnapps.f $(CNAPPS_DEPS)
	@gfortran -c -Wall  -O3 -funroll-loops $(CXXFLAGS) -o cnapps.o cnapps.f

cnapps_d.o : cnapps.f $(CNAPPS_DEPS)
	@gfortran -c -Wall  -g $(CXXFLAGS) -o cnapps_d.o cnapps.f



CNAUP2_DEPS = 

cnaup2.o : cnaup2.f $(CNAUP2_DEPS)
	@gfortran -c -Wall  -O3 -funroll-loops $(CXXFLAGS) -o cnaup2.o cnaup2.f

cnaup2_d.o : cnaup2.f $(CNAUP2_DEPS)
	@gfortran -c -Wall  -g $(CXXFLAGS) -o cnaup2_d.o cnaup2.f



CNAUPD_DEPS = 

cnaupd.o : cnaupd.f $(CNAUPD_DEPS)
	@gfortran -c -Wall  -O3 -funroll-loops $(CXXFLAGS) -o cnaupd.o cnaupd.f

cnaupd_d.o : cnaupd.f $(CNAUPD_DEPS)
	@gfortran -c -Wall  -g $(CXXFLAGS) -o cnaupd_d.o cnaupd.f



CNEIGH_DEPS = 

cneigh.o : cneigh.f $(CNEIGH_DEPS)
	@gfortran -c -Wall  -O3 -funroll-loops $(CXXFLAGS) -o cneigh.o cneigh.f

cneigh_d.o : cneigh.f $(CNEIGH_DEPS)
	@gfortran -c -Wall  -g $(CXXFLAGS) -o cneigh_d.o cneigh.f



CNEUPD_DEPS = 

cneupd.o : cneupd.f $(CNEUPD_DEPS)
	@gfortran -c -Wall  -O3 -funroll-loops $(CXXFLAGS) -o cneupd.o cneupd.f

cneupd_d.o : cneupd.f $(CNEUPD_DEPS)
	@gfortran -c -Wall  -g $(CXXFLAGS) -o cneupd_d.o cneupd.f



CNGETS_DEPS = 

cngets.o : cngets.f $(CNGETS_DEPS)
	@gfortran -c -Wall  -O3 -funroll-loops $(CXXFLAGS) -o cngets.o cngets.f

cngets_d.o : cngets.f $(CNGETS_DEPS)
	@gfortran -c -Wall  -g $(CXXFLAGS) -o cngets_d.o cngets.f



CSORTC_DEPS = 

csortc.o : csortc.f $(CSORTC_DEPS)
	@gfortran -c -Wall  -O3 -funroll-loops $(CXXFLAGS) -o csortc.o csortc.f

csortc_d.o : csortc.f $(CSORTC_DEPS)
	@gfortran -c -Wall  -g $(CXXFLAGS) -o csortc_d.o csortc.f



CSTATN_DEPS = 

cstatn.o : cstatn.f $(CSTATN_DEPS)
	@gfortran -c -Wall  -O3 -funroll-loops $(CXXFLAGS) -o cstatn.o cstatn.f

cstatn_d.o : cstatn.f $(CSTATN_DEPS)
	@gfortran -c -Wall  -g $(CXXFLAGS) -o cstatn_d.o cstatn.f



DGETV0_DEPS = 

dgetv0.o : dgetv0.f $(DGETV0_DEPS)
	@gfortran -c -Wall  -O3 -funroll-loops $(CXXFLAGS) -o dgetv0.o dgetv0.f

dgetv0_d.o : dgetv0.f $(DGETV0_DEPS)
	@gfortran -c -Wall  -g $(CXXFLAGS) -o dgetv0_d.o dgetv0.f



DLAQRB_DEPS = 

dlaqrb.o : dlaqrb.f $(DLAQRB_DEPS)
	@gfortran -c -Wall  -O3 -funroll-loops $(CXXFLAGS) -o dlaqrb.o dlaqrb.f

dlaqrb_d.o : dlaqrb.f $(DLAQRB_DEPS)
	@gfortran -c -Wall  -g $(CXXFLAGS) -o dlaqrb_d.o dlaqrb.f



DNAITR_DEPS = 

dnaitr.o : dnaitr.f $(DNAITR_DEPS)
	@gfortran -c -Wall  -O3 -funroll-loops $(CXXFLAGS) -o dnaitr.o dnaitr.f

dnaitr_d.o : dnaitr.f $(DNAITR_DEPS)
	@gfortran -c -Wall  -g $(CXXFLAGS) -o dnaitr_d.o dnaitr.f



DNAPPS_DEPS = 

dnapps.o : dnapps.f $(DNAPPS_DEPS)
	@gfortran -c -Wall  -O3 -funroll-loops $(CXXFLAGS) -o dnapps.o dnapps.f

dnapps_d.o : dnapps.f $(DNAPPS_DEPS)
	@gfortran -c -Wall  -g $(CXXFLAGS) -o dnapps_d.o dnapps.f



DNAUP2_DEPS = 

dnaup2.o : dnaup2.f $(DNAUP2_DEPS)
	@gfortran -c -Wall  -O3 -funroll-loops $(CXXFLAGS) -o dnaup2.o dnaup2.f

dnaup2_d.o : dnaup2.f $(DNAUP2_DEPS)
	@gfortran -c -Wall  -g $(CXXFLAGS) -o dnaup2_d.o dnaup2.f



DNAUPD_DEPS = 

dnaupd.o : dnaupd.f $(DNAUPD_DEPS)
	@gfortran -c -Wall  -O3 -funroll-loops $(CXXFLAGS) -o dnaupd.o dnaupd.f

dnaupd_d.o : dnaupd.f $(DNAUPD_DEPS)
	@gfortran -c -Wall  -g $(CXXFLAGS) -o dnaupd_d.o dnaupd.f



DNAUPE_DEPS = 

dnaupe.o : dnaupe.f $(DNAUPE_DEPS)
	@gfortran -c -Wall  -O3 -funroll-loops $(CXXFLAGS) -o dnaupe.o dnaupe.f

dnaupe_d.o : dnaupe.f $(DNAUPE_DEPS)
	@gfortran -c -Wall  -g $(CXXFLAGS) -o dnaupe_d.o dnaupe.f



DNCONV_DEPS = 

dnconv.o : dnconv.f $(DNCONV_DEPS)
	@gfortran -c -Wall  -O3 -funroll-loops $(CXXFLAGS) -o dnconv.o dnconv.f

dnconv_d.o : dnconv.f $(DNCONV_DEPS)
	@gfortran -c -Wall  -g $(CXXFLAGS) -o dnconv_d.o dnconv.f



DNEIGH_DEPS = 

dneigh.o : dneigh.f $(DNEIGH_DEPS)
	@gfortran -c -Wall  -O3 -funroll-loops $(CXXFLAGS) -o dneigh.o dneigh.f

dneigh_d.o : dneigh.f $(DNEIGH_DEPS)
	@gfortran -c -Wall  -g $(CXXFLAGS) -o dneigh_d.o dneigh.f



DNEUPD_DEPS = 

dneupd.o : dneupd.f $(DNEUPD_DEPS)
	@gfortran -c -Wall  -O3 -funroll-loops $(CXXFLAGS) -o dneupd.o dneupd.f

dneupd_d.o : dneupd.f $(DNEUPD_DEPS)
	@gfortran -c -Wall  -g $(CXXFLAGS) -o dneupd_d.o dneupd.f



DNGETS_DEPS = 

dngets.o : dngets.f $(DNGETS_DEPS)
	@gfortran -c -Wall  -O3 -funroll-loops $(CXXFLAGS) -o dngets.o dngets.f

dngets_d.o : dngets.f $(DNGETS_DEPS)
	@gfortran -c -Wall  -g $(CXXFLAGS) -o dngets_d.o dngets.f



DSAITR_DEPS = 

dsaitr.o : dsaitr.f $(DSAITR_DEPS)
	@gfortran -c -Wall  -O3 -funroll-loops $(CXXFLAGS) -o dsaitr.o dsaitr.f

dsaitr_d.o : dsaitr.f $(DSAITR_DEPS)
	@gfortran -c -Wall  -g $(CXXFLAGS) -o dsaitr_d.o dsaitr.f



DSAPPS_DEPS = 

dsapps.o : dsapps.f $(DSAPPS_DEPS)
	@gfortran -c -Wall  -O3 -funroll-loops $(CXXFLAGS) -o dsapps.o dsapps.f

dsapps_d.o : dsapps.f $(DSAPPS_DEPS)
	@gfortran -c -Wall  -g $(CXXFLAGS) -o dsapps_d.o dsapps.f



DSAUP2_DEPS = 

dsaup2.o : dsaup2.f $(DSAUP2_DEPS)
	@gfortran -c -Wall  -O3 -funroll-loops $(CXXFLAGS) -o dsaup2.o dsaup2.f

dsaup2_d.o : dsaup2.f $(DSAUP2_DEPS)
	@gfortran -c -Wall  -g $(CXXFLAGS) -o dsaup2_d.o dsaup2.f



DSAUPD_DEPS = 

dsaupd.o : dsaupd.f $(DSAUPD_DEPS)
	@gfortran -c -Wall  -O3 -funroll-loops $(CXXFLAGS) -o dsaupd.o dsaupd.f

dsaupd_d.o : dsaupd.f $(DSAUPD_DEPS)
	@gfortran -c -Wall  -g $(CXXFLAGS) -o dsaupd_d.o dsaupd.f



DSCONV_DEPS = 

dsconv.o : dsconv.f $(DSCONV_DEPS)
	@gfortran -c -Wall  -O3 -funroll-loops $(CXXFLAGS) -o dsconv.o dsconv.f

dsconv_d.o : dsconv.f $(DSCONV_DEPS)
	@gfortran -c -Wall  -g $(CXXFLAGS) -o dsconv_d.o dsconv.f



DSEIGT_DEPS = 

dseigt.o : dseigt.f $(DSEIGT_DEPS)
	@gfortran -c -Wall  -O3 -funroll-loops $(CXXFLAGS) -o dseigt.o dseigt.f

dseigt_d.o : dseigt.f $(DSEIGT_DEPS)
	@gfortran -c -Wall  -g $(CXXFLAGS) -o dseigt_d.o dseigt.f



DSESRT_DEPS = 

dsesrt.o : dsesrt.f $(DSESRT_DEPS)
	@gfortran -c -Wall  -O3 -funroll-loops $(CXXFLAGS) -o dsesrt.o dsesrt.f

dsesrt_d.o : dsesrt.f $(DSESRT_DEPS)
	@gfortran -c -Wall  -g $(CXXFLAGS) -o dsesrt_d.o dsesrt.f



DSEUPD_DEPS = 

dseupd.o : dseupd.f $(DSEUPD_DEPS)
	@gfortran -c -Wall  -O3 -funroll-loops $(CXXFLAGS) -o dseupd.o dseupd.f

dseupd_d.o : dseupd.f $(DSEUPD_DEPS)
	@gfortran -c -Wall  -g $(CXXFLAGS) -o dseupd_d.o dseupd.f



DSGETS_DEPS = 

dsgets.o : dsgets.f $(DSGETS_DEPS)
	@gfortran -c -Wall  -O3 -funroll-loops $(CXXFLAGS) -o dsgets.o dsgets.f

dsgets_d.o : dsgets.f $(DSGETS_DEPS)
	@gfortran -c -Wall  -g $(CXXFLAGS) -o dsgets_d.o dsgets.f



DSORTC_DEPS = 

dsortc.o : dsortc.f $(DSORTC_DEPS)
	@gfortran -c -Wall  -O3 -funroll-loops $(CXXFLAGS) -o dsortc.o dsortc.f

dsortc_d.o : dsortc.f $(DSORTC_DEPS)
	@gfortran -c -Wall  -g $(CXXFLAGS) -o dsortc_d.o dsortc.f



DSORTR_DEPS = 

dsortr.o : dsortr.f $(DSORTR_DEPS)
	@gfortran -c -Wall  -O3 -funroll-loops $(CXXFLAGS) -o dsortr.o dsortr.f

dsortr_d.o : dsortr.f $(DSORTR_DEPS)
	@gfortran -c -Wall  -g $(CXXFLAGS) -o dsortr_d.o dsortr.f



DSTATN_DEPS = 

dstatn.o : dstatn.f $(DSTATN_DEPS)
	@gfortran -c -Wall  -O3 -funroll-loops $(CXXFLAGS) -o dstatn.o dstatn.f

dstatn_d.o : dstatn.f $(DSTATN_DEPS)
	@gfortran -c -Wall  -g $(CXXFLAGS) -o dstatn_d.o dstatn.f



DSTATS_DEPS = 

dstats.o : dstats.f $(DSTATS_DEPS)
	@gfortran -c -Wall  -O3 -funroll-loops $(CXXFLAGS) -o dstats.o dstats.f

dstats_d.o : dstats.f $(DSTATS_DEPS)
	@gfortran -c -Wall  -g $(CXXFLAGS) -o dstats_d.o dstats.f



DSTQRB_DEPS = 

dstqrb.o : dstqrb.f $(DSTQRB_DEPS)
	@gfortran -c -Wall  -O3 -funroll-loops $(CXXFLAGS) -o dstqrb.o dstqrb.f

dstqrb_d.o : dstqrb.f $(DSTQRB_DEPS)
	@gfortran -c -Wall  -g $(CXXFLAGS) -o dstqrb_d.o dstqrb.f



SGETV0_DEPS = 

sgetv0.o : sgetv0.f $(SGETV0_DEPS)
	@gfortran -c -Wall  -O3 -funroll-loops $(CXXFLAGS) -o sgetv0.o sgetv0.f

sgetv0_d.o : sgetv0.f $(SGETV0_DEPS)
	@gfortran -c -Wall  -g $(CXXFLAGS) -o sgetv0_d.o sgetv0.f



SLAQRB_DEPS = 

slaqrb.o : slaqrb.f $(SLAQRB_DEPS)
	@gfortran -c -Wall  -O3 -funroll-loops $(CXXFLAGS) -o slaqrb.o slaqrb.f

slaqrb_d.o : slaqrb.f $(SLAQRB_DEPS)
	@gfortran -c -Wall  -g $(CXXFLAGS) -o slaqrb_d.o slaqrb.f



SNAITR_DEPS = 

snaitr.o : snaitr.f $(SNAITR_DEPS)
	@gfortran -c -Wall  -O3 -funroll-loops $(CXXFLAGS) -o snaitr.o snaitr.f

snaitr_d.o : snaitr.f $(SNAITR_DEPS)
	@gfortran -c -Wall  -g $(CXXFLAGS) -o snaitr_d.o snaitr.f



SNAPPS_DEPS = 

snapps.o : snapps.f $(SNAPPS_DEPS)
	@gfortran -c -Wall  -O3 -funroll-loops $(CXXFLAGS) -o snapps.o snapps.f

snapps_d.o : snapps.f $(SNAPPS_DEPS)
	@gfortran -c -Wall  -g $(CXXFLAGS) -o snapps_d.o snapps.f



SNAUP2_DEPS = 

snaup2.o : snaup2.f $(SNAUP2_DEPS)
	@gfortran -c -Wall  -O3 -funroll-loops $(CXXFLAGS) -o snaup2.o snaup2.f

snaup2_d.o : snaup2.f $(SNAUP2_DEPS)
	@gfortran -c -Wall  -g $(CXXFLAGS) -o snaup2_d.o snaup2.f



SNAUPD_DEPS = 

snaupd.o : snaupd.f $(SNAUPD_DEPS)
	@gfortran -c -Wall  -O3 -funroll-loops $(CXXFLAGS) -o snaupd.o snaupd.f

snaupd_d.o : snaupd.f $(SNAUPD_DEPS)
	@gfortran -c -Wall  -g $(CXXFLAGS) -o snaupd_d.o snaupd.f



SNAUPE_DEPS = 

snaupe.o : snaupe.f $(SNAUPE_DEPS)
	@gfortran -c -Wall  -O3 -funroll-loops $(CXXFLAGS) -o snaupe.o snaupe.f

snaupe_d.o : snaupe.f $(SNAUPE_DEPS)
	@gfortran -c -Wall  -g $(CXXFLAGS) -o snaupe_d.o snaupe.f



SNCONV_DEPS = 

snconv.o : snconv.f $(SNCONV_DEPS)
	@gfortran -c -Wall  -O3 -funroll-loops $(CXXFLAGS) -o snconv.o snconv.f

snconv_d.o : snconv.f $(SNCONV_DEPS)
	@gfortran -c -Wall  -g $(CXXFLAGS) -o snconv_d.o snconv.f



SNEIGH_DEPS = 

sneigh.o : sneigh.f $(SNEIGH_DEPS)
	@gfortran -c -Wall  -O3 -funroll-loops $(CXXFLAGS) -o sneigh.o sneigh.f

sneigh_d.o : sneigh.f $(SNEIGH_DEPS)
	@gfortran -c -Wall  -g $(CXXFLAGS) -o sneigh_d.o sneigh.f



SNEUPD_DEPS = 

sneupd.o : sneupd.f $(SNEUPD_DEPS)
	@gfortran -c -Wall  -O3 -funroll-loops $(CXXFLAGS) -o sneupd.o sneupd.f

sneupd_d.o : sneupd.f $(SNEUPD_DEPS)
	@gfortran -c -Wall  -g $(CXXFLAGS) -o sneupd_d.o sneupd.f



SNGETS_DEPS = 

sngets.o : sngets.f $(SNGETS_DEPS)
	@gfortran -c -Wall  -O3 -funroll-loops $(CXXFLAGS) -o sngets.o sngets.f

sngets_d.o : sngets.f $(SNGETS_DEPS)
	@gfortran -c -Wall  -g $(CXXFLAGS) -o sngets_d.o sngets.f



SSAITR_DEPS = 

ssaitr.o : ssaitr.f $(SSAITR_DEPS)
	@gfortran -c -Wall  -O3 -funroll-loops $(CXXFLAGS) -o ssaitr.o ssaitr.f

ssaitr_d.o : ssaitr.f $(SSAITR_DEPS)
	@gfortran -c -Wall  -g $(CXXFLAGS) -o ssaitr_d.o ssaitr.f



SSAPPS_DEPS = 

ssapps.o : ssapps.f $(SSAPPS_DEPS)
	@gfortran -c -Wall  -O3 -funroll-loops $(CXXFLAGS) -o ssapps.o ssapps.f

ssapps_d.o : ssapps.f $(SSAPPS_DEPS)
	@gfortran -c -Wall  -g $(CXXFLAGS) -o ssapps_d.o ssapps.f



SSAUP2_DEPS = 

ssaup2.o : ssaup2.f $(SSAUP2_DEPS)
	@gfortran -c -Wall  -O3 -funroll-loops $(CXXFLAGS) -o ssaup2.o ssaup2.f

ssaup2_d.o : ssaup2.f $(SSAUP2_DEPS)
	@gfortran -c -Wall  -g $(CXXFLAGS) -o ssaup2_d.o ssaup2.f



SSAUPD_DEPS = 

ssaupd.o : ssaupd.f $(SSAUPD_DEPS)
	@gfortran -c -Wall  -O3 -funroll-loops $(CXXFLAGS) -o ssaupd.o ssaupd.f

ssaupd_d.o : ssaupd.f $(SSAUPD_DEPS)
	@gfortran -c -Wall  -g $(CXXFLAGS) -o ssaupd_d.o ssaupd.f



SSCONV_DEPS = 

ssconv.o : ssconv.f $(SSCONV_DEPS)
	@gfortran -c -Wall  -O3 -funroll-loops $(CXXFLAGS) -o ssconv.o ssconv.f

ssconv_d.o : ssconv.f $(SSCONV_DEPS)
	@gfortran -c -Wall  -g $(CXXFLAGS) -o ssconv_d.o ssconv.f



SSEIGT_DEPS = 

sseigt.o : sseigt.f $(SSEIGT_DEPS)
	@gfortran -c -Wall  -O3 -funroll-loops $(CXXFLAGS) -o sseigt.o sseigt.f

sseigt_d.o : sseigt.f $(SSEIGT_DEPS)
	@gfortran -c -Wall  -g $(CXXFLAGS) -o sseigt_d.o sseigt.f



SSESRT_DEPS = 

ssesrt.o : ssesrt.f $(SSESRT_DEPS)
	@gfortran -c -Wall  -O3 -funroll-loops $(CXXFLAGS) -o ssesrt.o ssesrt.f

ssesrt_d.o : ssesrt.f $(SSESRT_DEPS)
	@gfortran -c -Wall  -g $(CXXFLAGS) -o ssesrt_d.o ssesrt.f



SSEUPD_DEPS = 

sseupd.o : sseupd.f $(SSEUPD_DEPS)
	@gfortran -c -Wall  -O3 -funroll-loops $(CXXFLAGS) -o sseupd.o sseupd.f

sseupd_d.o : sseupd.f $(SSEUPD_DEPS)
	@gfortran -c -Wall  -g $(CXXFLAGS) -o sseupd_d.o sseupd.f



SSGETS_DEPS = 

ssgets.o : ssgets.f $(SSGETS_DEPS)
	@gfortran -c -Wall  -O3 -funroll-loops $(CXXFLAGS) -o ssgets.o ssgets.f

ssgets_d.o : ssgets.f $(SSGETS_DEPS)
	@gfortran -c -Wall  -g $(CXXFLAGS) -o ssgets_d.o ssgets.f



SSORTC_DEPS = 

ssortc.o : ssortc.f $(SSORTC_DEPS)
	@gfortran -c -Wall  -O3 -funroll-loops $(CXXFLAGS) -o ssortc.o ssortc.f

ssortc_d.o : ssortc.f $(SSORTC_DEPS)
	@gfortran -c -Wall  -g $(CXXFLAGS) -o ssortc_d.o ssortc.f



SSORTR_DEPS = 

ssortr.o : ssortr.f $(SSORTR_DEPS)
	@gfortran -c -Wall  -O3 -funroll-loops $(CXXFLAGS) -o ssortr.o ssortr.f

ssortr_d.o : ssortr.f $(SSORTR_DEPS)
	@gfortran -c -Wall  -g $(CXXFLAGS) -o ssortr_d.o ssortr.f



SSTATN_DEPS = 

sstatn.o : sstatn.f $(SSTATN_DEPS)
	@gfortran -c -Wall  -O3 -funroll-loops $(CXXFLAGS) -o sstatn.o sstatn.f

sstatn_d.o : sstatn.f $(SSTATN_DEPS)
	@gfortran -c -Wall  -g $(CXXFLAGS) -o sstatn_d.o sstatn.f



SSTATS_DEPS = 

sstats.o : sstats.f $(SSTATS_DEPS)
	@gfortran -c -Wall  -O3 -funroll-loops $(CXXFLAGS) -o sstats.o sstats.f

sstats_d.o : sstats.f $(SSTATS_DEPS)
	@gfortran -c -Wall  -g $(CXXFLAGS) -o sstats_d.o sstats.f



SSTQRB_DEPS = 

sstqrb.o : sstqrb.f $(SSTQRB_DEPS)
	@gfortran -c -Wall  -O3 -funroll-loops $(CXXFLAGS) -o sstqrb.o sstqrb.f

sstqrb_d.o : sstqrb.f $(SSTQRB_DEPS)
	@gfortran -c -Wall  -g $(CXXFLAGS) -o sstqrb_d.o sstqrb.f



ZGETV0_DEPS = 

zgetv0.o : zgetv0.f $(ZGETV0_DEPS)
	@gfortran -c -Wall  -O3 -funroll-loops $(CXXFLAGS) -o zgetv0.o zgetv0.f

zgetv0_d.o : zgetv0.f $(ZGETV0_DEPS)
	@gfortran -c -Wall  -g $(CXXFLAGS) -o zgetv0_d.o zgetv0.f



ZNAITR_DEPS = 

znaitr.o : znaitr.f $(ZNAITR_DEPS)
	@gfortran -c -Wall  -O3 -funroll-loops $(CXXFLAGS) -o znaitr.o znaitr.f

znaitr_d.o : znaitr.f $(ZNAITR_DEPS)
	@gfortran -c -Wall  -g $(CXXFLAGS) -o znaitr_d.o znaitr.f



ZNAPPS_DEPS = 

znapps.o : znapps.f $(ZNAPPS_DEPS)
	@gfortran -c -Wall  -O3 -funroll-loops $(CXXFLAGS) -o znapps.o znapps.f

znapps_d.o : znapps.f $(ZNAPPS_DEPS)
	@gfortran -c -Wall  -g $(CXXFLAGS) -o znapps_d.o znapps.f



ZNAUP2_DEPS = 

znaup2.o : znaup2.f $(ZNAUP2_DEPS)
	@gfortran -c -Wall  -O3 -funroll-loops $(CXXFLAGS) -o znaup2.o znaup2.f

znaup2_d.o : znaup2.f $(ZNAUP2_DEPS)
	@gfortran -c -Wall  -g $(CXXFLAGS) -o znaup2_d.o znaup2.f



ZNAUPD_DEPS = 

znaupd.o : znaupd.f $(ZNAUPD_DEPS)
	@gfortran -c -Wall  -O3 -funroll-loops $(CXXFLAGS) -o znaupd.o znaupd.f

znaupd_d.o : znaupd.f $(ZNAUPD_DEPS)
	@gfortran -c -Wall  -g $(CXXFLAGS) -o znaupd_d.o znaupd.f



ZNEIGH_DEPS = 

zneigh.o : zneigh.f $(ZNEIGH_DEPS)
	@gfortran -c -Wall  -O3 -funroll-loops $(CXXFLAGS) -o zneigh.o zneigh.f

zneigh_d.o : zneigh.f $(ZNEIGH_DEPS)
	@gfortran -c -Wall  -g $(CXXFLAGS) -o zneigh_d.o zneigh.f



ZNEUPD_DEPS = 

zneupd.o : zneupd.f $(ZNEUPD_DEPS)
	@gfortran -c -Wall  -O3 -funroll-loops $(CXXFLAGS) -o zneupd.o zneupd.f

zneupd_d.o : zneupd.f $(ZNEUPD_DEPS)
	@gfortran -c -Wall  -g $(CXXFLAGS) -o zneupd_d.o zneupd.f



ZNGETS_DEPS = 

zngets.o : zngets.f $(ZNGETS_DEPS)
	@gfortran -c -Wall  -O3 -funroll-loops $(CXXFLAGS) -o zngets.o zngets.f

zngets_d.o : zngets.f $(ZNGETS_DEPS)
	@gfortran -c -Wall  -g $(CXXFLAGS) -o zngets_d.o zngets.f



ZSORTC_DEPS = 

zsortc.o : zsortc.f $(ZSORTC_DEPS)
	@gfortran -c -Wall  -O3 -funroll-loops $(CXXFLAGS) -o zsortc.o zsortc.f

zsortc_d.o : zsortc.f $(ZSORTC_DEPS)
	@gfortran -c -Wall  -g $(CXXFLAGS) -o zsortc_d.o zsortc.f



ZSTATN_DEPS = 

zstatn.o : zstatn.f $(ZSTATN_DEPS)
	@gfortran -c -Wall  -O3 -funroll-loops $(CXXFLAGS) -o zstatn.o zstatn.f

zstatn_d.o : zstatn.f $(ZSTATN_DEPS)
	@gfortran -c -Wall  -g $(CXXFLAGS) -o zstatn_d.o zstatn.f



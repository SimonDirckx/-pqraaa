CXXFLAGS =       -I/home/simond/hlibpro-3.0-Ubuntu22.04/hlibpro-3.0/numerics_software//boost_1_59_0
LDFLAGS =   
LIBS =  -L/home/simond/hlibpro-3.0-Ubuntu22.04/hlibpro-3.0/numerics_software//boost_1_59_0/libs -lboost_1_59_0

CMDLINE_DEPS = 

cmdline_d.o : cmdline.cpp $(CMDLINE_DEPS)
	@c++ -c -std=c++17 -Wall  -g $(CXXFLAGS) -o cmdline_d.o cmdline.cpp

cmdline.o : cmdline.cpp $(CMDLINE_DEPS)
	@c++ -c -std=c++17 -Wall  -DNDEBUG -O3 -funroll-loops $(CXXFLAGS) -o cmdline.o cmdline.cpp



CONFIG_FILE_DEPS = 

config_file_d.o : config_file.cpp $(CONFIG_FILE_DEPS)
	@c++ -c -std=c++17 -Wall  -g $(CXXFLAGS) -o config_file_d.o config_file.cpp

config_file.o : config_file.cpp $(CONFIG_FILE_DEPS)
	@c++ -c -std=c++17 -Wall  -DNDEBUG -O3 -funroll-loops $(CXXFLAGS) -o config_file.o config_file.cpp



CONVERT_DEPS = 

convert_d.o : convert.cpp $(CONVERT_DEPS)
	@c++ -c -std=c++17 -Wall  -g $(CXXFLAGS) -o convert_d.o convert.cpp

convert.o : convert.cpp $(CONVERT_DEPS)
	@c++ -c -std=c++17 -Wall  -DNDEBUG -O3 -funroll-loops $(CXXFLAGS) -o convert.o convert.cpp



OPTIONS_DESCRIPTION_DEPS = 

options_description_d.o : options_description.cpp $(OPTIONS_DESCRIPTION_DEPS)
	@c++ -c -std=c++17 -Wall  -g $(CXXFLAGS) -o options_description_d.o options_description.cpp

options_description.o : options_description.cpp $(OPTIONS_DESCRIPTION_DEPS)
	@c++ -c -std=c++17 -Wall  -DNDEBUG -O3 -funroll-loops $(CXXFLAGS) -o options_description.o options_description.cpp



PARSERS_DEPS = 

parsers_d.o : parsers.cpp $(PARSERS_DEPS)
	@c++ -c -std=c++17 -Wall  -g $(CXXFLAGS) -o parsers_d.o parsers.cpp

parsers.o : parsers.cpp $(PARSERS_DEPS)
	@c++ -c -std=c++17 -Wall  -DNDEBUG -O3 -funroll-loops $(CXXFLAGS) -o parsers.o parsers.cpp



POSITIONAL_OPTIONS_DEPS = 

positional_options_d.o : positional_options.cpp $(POSITIONAL_OPTIONS_DEPS)
	@c++ -c -std=c++17 -Wall  -g $(CXXFLAGS) -o positional_options_d.o positional_options.cpp

positional_options.o : positional_options.cpp $(POSITIONAL_OPTIONS_DEPS)
	@c++ -c -std=c++17 -Wall  -DNDEBUG -O3 -funroll-loops $(CXXFLAGS) -o positional_options.o positional_options.cpp



SPLIT_DEPS = 

split_d.o : split.cpp $(SPLIT_DEPS)
	@c++ -c -std=c++17 -Wall  -g $(CXXFLAGS) -o split_d.o split.cpp

split.o : split.cpp $(SPLIT_DEPS)
	@c++ -c -std=c++17 -Wall  -DNDEBUG -O3 -funroll-loops $(CXXFLAGS) -o split.o split.cpp



UTF8_CODECVT_FACET_DEPS = 

utf8_codecvt_facet_d.o : utf8_codecvt_facet.cpp $(UTF8_CODECVT_FACET_DEPS)
	@c++ -c -std=c++17 -Wall  -g $(CXXFLAGS) -o utf8_codecvt_facet_d.o utf8_codecvt_facet.cpp

utf8_codecvt_facet.o : utf8_codecvt_facet.cpp $(UTF8_CODECVT_FACET_DEPS)
	@c++ -c -std=c++17 -Wall  -DNDEBUG -O3 -funroll-loops $(CXXFLAGS) -o utf8_codecvt_facet.o utf8_codecvt_facet.cpp



VALUE_SEMANTIC_DEPS = 

value_semantic_d.o : value_semantic.cpp $(VALUE_SEMANTIC_DEPS)
	@c++ -c -std=c++17 -Wall  -g $(CXXFLAGS) -o value_semantic_d.o value_semantic.cpp

value_semantic.o : value_semantic.cpp $(VALUE_SEMANTIC_DEPS)
	@c++ -c -std=c++17 -Wall  -DNDEBUG -O3 -funroll-loops $(CXXFLAGS) -o value_semantic.o value_semantic.cpp



VARIABLES_MAP_DEPS = 

variables_map_d.o : variables_map.cpp $(VARIABLES_MAP_DEPS)
	@c++ -c -std=c++17 -Wall  -g $(CXXFLAGS) -o variables_map_d.o variables_map.cpp

variables_map.o : variables_map.cpp $(VARIABLES_MAP_DEPS)
	@c++ -c -std=c++17 -Wall  -DNDEBUG -O3 -funroll-loops $(CXXFLAGS) -o variables_map.o variables_map.cpp



WINMAIN_DEPS = 

winmain_d.o : winmain.cpp $(WINMAIN_DEPS)
	@c++ -c -std=c++17 -Wall  -g $(CXXFLAGS) -o winmain_d.o winmain.cpp

winmain.o : winmain.cpp $(WINMAIN_DEPS)
	@c++ -c -std=c++17 -Wall  -DNDEBUG -O3 -funroll-loops $(CXXFLAGS) -o winmain.o winmain.cpp


